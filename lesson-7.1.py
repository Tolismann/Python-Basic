# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
# (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин,
# расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции
# сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, matrix1, matrix2):
        self.matrix1 = matrix1
        self.matrix2 = matrix2

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matrix1]))

    def __add__(self):
        result = [[0, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]
        for i1 in range(len(self.matrix1)):
            for i2 in range(len(self.matrix2[i1])):
                result[i1][i2] = self.matrix1[i1][i2] + self.matrix2[i1][i2]
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in result]))


mas1 = [[12, 46, 904],
        [46, 43, 40],
        [90, 70, 4]]
mas2 = [[65, 48, 97],
        [64, 487, 313],
        [11, 215, 64]]
mas3 = [[12, 46],
        [46, 43],
        [90, 70]]
mas4 = [[65, 48],
        [64, 487],
        [11, 215]]


m1 = Matrix(mas1, mas2)
m2 = Matrix(mas3, mas4)
print(m1.__add__())
print()
print(m2.__add__())
